using HotelRoomManagement.Infrastructure.Data;
using HotelRoomManagement.Infrastructure.Entities;
using HotelRoomManagement.Infrastructure.Interfaces;
using Microsoft.EntityFrameworkCore;

namespace HotelRoomManagement.Infrastructure.Repositories
{
    public class GuestRepository : IGuestRepository
    {
        private readonly ApplicationDbContext _context;

        public GuestRepository(ApplicationDbContext context)
        {
            _context = context;
        }

        public async Task<IEnumerable<Guest>> GetAllAsync()
        {
            return await _context.Guests.Include(g => g.Room).ToListAsync();
        }

        public async Task<Guest> GetByIdAsync(int id)
        {
            return await _context.Guests.Include(g => g.Room).FirstOrDefaultAsync(g => g.Id == id);
        }

        public async Task<Guest> CreateAsync(Guest guest)
        {
            _context.Guests.Add(guest);
            await _context.SaveChangesAsync();
            return guest;
        }

        public async Task<bool> UpdateAsync(Guest guest)
        {
            _context.Guests.Update(guest);
            return await _context.SaveChangesAsync() > 0;
        }

        public async Task<bool> DeleteAsync(int id)
        {
            var guest = await _context.Guests.FindAsync(id);
            if (guest == null)
                return false;

            _context.Guests.Remove(guest);
            return await _context.SaveChangesAsync() > 0;
        }
    }
}
