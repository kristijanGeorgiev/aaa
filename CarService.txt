// File: Application/Services/CarService.cs
public class CarService : ICarService
{
    private readonly ICarRepository _repo;
    private readonly IMapper _mapper;

    public CarService(ICarRepository repo, IMapper mapper)
    {
        _repo = repo;
        _mapper = mapper;
    }

    public async Task<IEnumerable<CarDto>> GetAllAsync()
    {
        var cars = await _repo.GetAllAsync();
        return _mapper.Map<IEnumerable<CarDto>>(cars);
    }

    public async Task<CarDto> GetByIdAsync(int id)
    {
        var car = await _repo.GetByIdAsync(id);
        return _mapper.Map<CarDto>(car);
    }

    public async Task<CarDto> CreateAsync(CarDto dto)
    {
        var car = _mapper.Map<Car>(dto);
        var created = await _repo.CreateAsync(car);
        return _mapper.Map<CarDto>(created);
    }

    public async Task<bool> UpdateAsync(int id, CarDto dto)
    {
        var car = _mapper.Map<Car>(dto);
        car.Id = id;
        return await _repo.UpdateAsync(car);
    }

    public async Task<bool> DeleteAsync(int id)
    {
        return await _repo.DeleteAsync(id);
    }
}
