// File: Application/Services/ClientService.cs
public class ClientService : IClientService
{
    private readonly IClientRepository _repo;
    private readonly IMapper _mapper;

    public ClientService(IClientRepository repo, IMapper mapper)
    {
        _repo = repo;
        _mapper = mapper;
    }

    public async Task<IEnumerable<ClientDto>> GetAllAsync()
    {
        var clients = await _repo.GetAllAsync();
        return _mapper.Map<IEnumerable<ClientDto>>(clients);
    }

    public async Task<ClientDto> GetByIdAsync(int id)
    {
        var client = await _repo.GetByIdAsync(id);
        return _mapper.Map<ClientDto>(client);
    }

    public async Task<ClientDto> CreateAsync(ClientDto dto)
    {
        var client = _mapper.Map<Client>(dto);
        var created = await _repo.CreateAsync(client);
        return _mapper.Map<ClientDto>(created);
    }

    public async Task<bool> UpdateAsync(int id, ClientDto dto)
    {
        var client = _mapper.Map<Client>(dto);
        client.Id = id;
        return await _repo.UpdateAsync(client);
    }

    public async Task<bool> DeleteAsync(int id)
    {
        return await _repo.DeleteAsync(id);
    }
}
